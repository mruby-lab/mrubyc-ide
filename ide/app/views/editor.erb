<html>
<title>mrubyc-ide</title>
<head>
  <meta charset="UTF-8">
  <script src="/lib/codemirror.js"></script>
  <link rel="stylesheet" href="/lib/codemirror.css">
  <link rel="stylesheet" href="/theme/base16-dark.css">
  <script src="/mode/ruby/ruby.js"></script>
  <script type="text/javascript" src="senstick_app_mrubyc.js"></script>
</head>

<body>
  <h1>mrubyc開発環境 for <%= @writer_name %></h1>
  <form action="<%= @writer_action %>" method="POST">
    <div>
      ファイル名:<br><input id="name" type="text" name="name" value="program">
    </div>
    <br>

    <div>
      コンパイラバージョン:
      <select name="version">
        <% for v in @versions do %>
        <% if v==@default_mrbc then %>
        <option value="<%= v %>" selected>mrbc <%= v %></option>
        <% else %>
        <option value="<%= v %>">mrbc <%= v %></option>
        <% end %>
        <% end %>
      </select>
    </div>
    <br>

    <div>
      mrubyプログラム:<br>
      <textarea id="program" name="program">puts "Hello"</textarea>
      <!--
      ※textareaの初期入力がない場合、一度コンパイルをかけないとtextareaの内容をRubyファイルとして保存できない※
      -->
    </div>

    <script> //シンタックスハイライト機能
      var editor = CodeMirror.fromTextArea(document.getElementById("program"), {
        mode: "ruby",
        lineNumbers: true,
        theme: 'base16-dark'
      });
      editor.setSize("60%", "60%");
      editor.save();
    </script>

    <script> //Rubyファイルのドラック&ドロップ機能
      function initDnD(){
	      const el = document.querySelector("#program");

	      //ファイルがドロップされたときの処理
	      el.addEventListener("drop", event => {
		      //デフォルトの動作を禁止
		      event.preventDefault();
          console.log("drop");
		      const file = event.dataTransfer.files[0];
		      const r = new FileReader();
		      r.onload = function(ev){
			      //ファイルを読み終わったときの処理
			      document.querySelector("#program").value = ev.target.result;
		      };
		      //ファイルを読み込む
		      r.readAsText(file);
	      });

	      //ドロップ禁止にならないようにする
	      el.addEventListener("dragover", event => event.preventDefault());

        //編集内容をtextareaに同期
        editor.save();
      }
      //初期化処理
      Window.onload = event => initDnD();
    </script>

    <script> //Textareaの内容を保存
      function save(){
        editor.save();
        var code = document.getElementById('program').value;
        var name = document.getElementById('name').value;
        if(!name){
          name = 'program';
        }

        if(!code){
          return;
        }

        var blob = new Blob([code], {type: 'text/plain'});

        var a = document.createElement('a');
        a.href = URL.createObjectURL(blob);
        a.download = name + '.rb';
        a.click();
      };
    </script>
    <br>

    <div>
      <% if @writer == :download then %>
      <input type="submit" value="コンパイル&ダウンロード">
      <% elsif @writer == :ble then %>
      <input type="button" value="BLE接続" onClick="scan_onclick()">
      <input type="submit" value="転送(<%= @writer_name %>)">
      <% end %>
    </div>
  </form>

  <div>
    <button onclick="save();">ファイルを保存</button>
  </div>

</body>
</html>
